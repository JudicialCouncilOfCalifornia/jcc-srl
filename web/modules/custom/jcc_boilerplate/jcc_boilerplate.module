<?php

/**
 * @file
 * Contains jcc_boilerplate.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Serialization\Yaml;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function jcc_boilerplate_form_node_srl_howto_instruction_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Define Trigger.
  $trigger = $form_state->getUserInput()['_triggering_element_value'];

  // Get and parse .yml.
  // @todo Handle multiple boilerplates.
  $module_handler = \Drupal::service('module_handler');
  $module_path = $module_handler->getModule('jcc_boilerplate')->getPath();
  $boilerplate_text = Yaml::decode(file_get_contents($module_path .'/jcc_boilerplate.service.yml'));

  if ($trigger == 'Add Boilerplate Steps') {

    $boilerplate_steps = $boilerplate_text['steps'];

    // Count existing paragraphs and set to index 0.
    $paragraph_count = count($form_state->getUserInput()["field_paragraphs"]);
    $paragraph_count = $paragraph_count - 1;

    // Count existing steps.
    $step_count = count($form_state->getUserInput()["field_paragraphs"][0]["subform"]["field_steps"]);

    // Send values to Drupal fields.
    foreach ($boilerplate_steps as $i => $step) {

      $field_names = [
        'description',
        'title_display',
        'details_link_text',
        'details'
      ];

      foreach ($field_names as $field_name) {

        if ($form["field_paragraphs"]["widget"][$paragraph_count]["subform"]["field_steps"]["widget"][$i + $step_count]["subform"]["field_" . $field_name]["widget"][0]["value"]["#type"] ==
        'textfield') {

          $form["field_paragraphs"]["widget"][$paragraph_count]["subform"]["field_steps"]["widget"][$i + $step_count]["subform"]["field_" . $field_name]["widget"][0]["value"]["#default_value"] = $step[$field_name];
        }

        else {
          $form["field_paragraphs"]["widget"][$paragraph_count]["subform"]["field_steps"]["widget"][$i + $step_count]["subform"]["field_" . $field_name]["widget"][0]["#default_value"] = $step[$field_name];
        }
      }
    }
  }
}
